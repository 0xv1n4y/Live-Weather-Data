{"ast":null,"code":"var _jsxFileName = \"/home/vinay/Desktop/weather App/weather01/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n// import Header from \"./pages/Navbar\";\n// import Body from \"./pages/Body\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(false);\n  const API_KEY = \"0306f3e1767baa02731f4d5bb9b8cff4\";\n  const API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\n  //Fetch The weather Data in OpenweathermapAPI\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await axios.get(API_URL, {\n        params: {\n          q: location,\n          appid: API_KEY,\n          units: \"metric\"\n        }\n      });\n      console.log(response.data);\n      setWeatherData(response.data);\n    } catch (err) {\n      console.error(\"Error to Fetching Weather data\", err);\n    }\n  };\n  useEffect(() => {\n    if (location) {\n      fetchWeatherData();\n    }\n  }, [location]);\n  const handlecheck = e => {\n    setLocation(e.target.value);\n  };\n  // To Reload the window\n  const reload = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      reload: reload,\n      location: location,\n      handlecheck: handlecheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UrqbuGt4H5pOJ6uNNCcbLbRvnDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Navbar","Container","styled","jsxDEV","_jsxDEV","App","_s","location","setLocation","weatherData","setWeatherData","API_KEY","API_URL","fetchWeatherData","response","get","params","q","appid","units","console","log","data","err","error","handlecheck","e","target","value","reload","window","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vinay/Desktop/weather App/weather01/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n// import Header from \"./pages/Navbar\";\n// import Body from \"./pages/Body\";\n\n\nfunction App() {\n  const [location, setLocation] = useState(\"\");\n  const [weatherData, setWeatherData] = useState(false);\n\n  const API_KEY = \"0306f3e1767baa02731f4d5bb9b8cff4\";\n  const API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\n  //Fetch The weather Data in OpenweathermapAPI\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await axios.get(API_URL, {\n        params: { q: location, appid: API_KEY, units: \"metric\" },\n      });\n      console.log(response.data);\n      setWeatherData(response.data);\n    } catch (err) {\n      console.error(\"Error to Fetching Weather data\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (location) {\n      fetchWeatherData();\n    }\n  }, [location]);\n\n  const handlecheck = (e) => {\n    setLocation(e.target.value);\n  };\n  // To Reload the window\n  const reload = () => {\n    window.location.reload();\n  };\n  return (\n    <Container>\n      {/* <Header  />\n      <Body weatherData={weatherData} /> */}\n      <Navbar reload={reload} location={location} handlecheck={handlecheck}/>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,OAAO,GAAG,kCAAkC;EAClD,MAAMC,OAAO,GAAG,iDAAiD;;EAEjE;;EAEA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACH,OAAO,EAAE;QACxCI,MAAM,EAAE;UAAEC,CAAC,EAAEV,QAAQ;UAAEW,KAAK,EAAEP,OAAO;UAAEQ,KAAK,EAAE;QAAS;MACzD,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAAC;MAC1BZ,cAAc,CAACI,QAAQ,CAACQ,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZH,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAED,GAAG,CAAC;IACtD;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,EAAE;MACZM,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMkB,WAAW,GAAIC,CAAC,IAAK;IACzBlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBC,MAAM,CAACvB,QAAQ,CAACsB,MAAM,CAAC,CAAC;EAC1B,CAAC;EACD,oBACEzB,OAAA,CAACH,SAAS;IAAA8B,QAAA,eAGR3B,OAAA,CAACJ,MAAM;MAAC6B,MAAM,EAAEA,MAAO;MAACtB,QAAQ,EAAEA,QAAS;MAACkB,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEhB;AAAC7B,EAAA,CAzCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}