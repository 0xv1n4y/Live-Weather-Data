{"ast":null,"code":"var _jsxFileName = \"/home/vinay/Desktop/weather App/weather01/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport Body from \"./pages/Body\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState();\n  const [location, setLocation] = useState(\"\");\n  const API_KEY = \"0306f3e1767baa02731f4d5bb9b8cff4\";\n  const API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\n  //Fetch The weather Data in OpenweathermapAPI\n\n  const fetchWeatherData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(API_URL, {\n        params: {\n          q: location,\n          appid: API_KEY,\n          units: \"\"\n        }\n      });\n      setWeatherData(data);\n    } catch (err) {\n      console.error(\"Error to Fetching Weather data\", err);\n    }\n  };\n  useEffect(() => {\n    if (location) {\n      fetchWeatherData();\n    }\n  }, [location]);\n  const handlecheck = e => {\n    setLocation(e.target.value);\n  };\n  // To Reload the window\n  const reload = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      reload: reload,\n      location: location,\n      handlecheck: handlecheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gfRKlaVLakJN1ycTgXOMrP76fw8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Navbar","Main","Body","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","location","setLocation","API_KEY","API_URL","fetchWeatherData","data","get","params","q","appid","units","err","console","error","handlecheck","e","target","value","reload","window","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vinay/Desktop/weather App/weather01/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport Main from \"./components/Main\";\nimport Body from \"./pages/Body\";\n\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState();\n  const [location, setLocation] = useState(\"\");\n\n  const API_KEY = \"0306f3e1767baa02731f4d5bb9b8cff4\";\n  const API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\n  //Fetch The weather Data in OpenweathermapAPI\n\n  const fetchWeatherData = async () => {\n    try {\n      const {data} = await axios.get(API_URL, {\n        params: { q: location, appid: API_KEY, units: \"\" },\n      });\n      \n      setWeatherData(data);\n    } catch (err) {\n      console.error(\"Error to Fetching Weather data\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (location) {\n      fetchWeatherData();\n    }\n  }, [location]);\n\n\n  const handlecheck = (e) => {\n    setLocation(e.target.value);\n  };\n  // To Reload the window\n  const reload = () => {\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <Navbar reload={reload} location={location} handlecheck={handlecheck} />\n      {/* <Body weatherData={weatherData}/> */}\n      <Main weatherData={weatherData}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAChD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,OAAO,GAAG,kCAAkC;EAClD,MAAMC,OAAO,GAAG,iDAAiD;;EAEjE;;EAEA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAM;QAACC;MAAI,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACH,OAAO,EAAE;QACtCI,MAAM,EAAE;UAAEC,CAAC,EAAER,QAAQ;UAAES,KAAK,EAAEP,OAAO;UAAEQ,KAAK,EAAE;QAAG;MACnD,CAAC,CAAC;MAEFX,cAAc,CAACM,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;IACtD;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZI,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAGd,MAAMc,WAAW,GAAIC,CAAC,IAAK;IACzBd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EACD;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBC,MAAM,CAACnB,QAAQ,CAACkB,MAAM,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEvB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACJ,MAAM;MAAC2B,MAAM,EAAEA,MAAO;MAAClB,QAAQ,EAAEA,QAAS;MAACc,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExE7B,OAAA,CAACH,IAAI;MAACM,WAAW,EAAEA;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAAC3B,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}